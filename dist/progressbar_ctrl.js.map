{"version":3,"sources":["../src/progressbar_ctrl.js"],"names":["MetricsPanelCtrl","_","kbn","TimeSeries","ProgressBarCtrl","$scope","$injector","$rootScope","panelDefaults","legend","show","links","datasource","maxDataPoints","interval","targets","cacheTimeout","nullPointMode","legendType","aliasColors","format","decimals","valueName","color","defaults","panel","events","on","onDataReceived","bind","onDataError","onInitEditMode","addEditorTab","unitFormats","getUnitFormats","subItem","value","render","series","data","parseSeries","map","serie","i","label","alias","stats","colors","dataList","seriesHandler","seriesData","datapoints","target","flotpairs","getFlotPairs","selectedSeries","selectedColor","index","indexOf","isNumber","scaledDecimals","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","result","max","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","scope","elem","attrs","ctrl","setTimeout","incrementRenderCounter","dt","parseFloat","toFixed","templateUrl"],"mappings":"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","file":"progressbar_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series';\n// import rendering from './rendering';\n// import legend from './legend';\nimport './css/progress.css!';\n\nexport class ProgressBarCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n\n    var panelDefaults = {\n      legend: {\n        show: true\n      },\n      links: [],\n      datasource: null,\n      maxDataPoints: 3,\n      interval: null,\n      targets: [{}],\n      cacheTimeout: null,\n      nullPointMode: 'connected',\n      legendType: 'aboveGraph',\n      aliasColors: {},\n      format: 'short',\n      decimals: \"2\",\n      valueName: 'current',\n      color: \"#428bca\"\n    };\n\n    _.defaults(this.panel, panelDefaults);\n    _.defaults(this.panel.legend, panelDefaults.legend);\n\n    // this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/grafana-progressbar-panel/editor.html', 2);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.render();\n  }\n\n  onDataError() {\n    this.series = [];\n    this.render();\n  }\n\n  // changeSeriesColor(series, color) {\n  //   series.color = color;\n  //   this.panel.aliasColors[series.alias] = series.color;\n  //   this.render();\n  // }\n\n  onRender() {\n    this.data = this.parseSeries(this.series);\n  }\n\n  parseSeries(series) {\n    return _.map(this.series, (serie, i) => {\n      return {\n        label: serie.alias,\n        data: serie.stats[this.panel.valueName],\n        color: this.panel.aliasColors[serie.alias] || this.$rootScope.colors[i]\n      };\n    });\n  }\n\n  onDataReceived(dataList) {\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    this.data = this.parseSeries(this.series);\n    this.render(this.data);\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target\n    });\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  changeLegendColor(selectedSeries, selectedColor) {\n    var index = this.data.indexOf(selectedSeries);\n    if (index > -1) {\n      this.panel.aliasColors[selectedSeries.label] = selectedColor;\n      this.data[index].color = selectedColor;\n      this.render(this.data);\n    }\n  }\n\n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return { decimals: this.panel.decimals, scaledDecimals: null };\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec);\n    var norm = delta / magn; // norm is between 1.0 and 10.0\n    var size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) { dec = 0; }\n\n    var result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n    return result;\n  }\n\n  formatValue(value) {\n    var decimalInfo = this.getDecimalsForValue(value);\n    var formatFunc = kbn.valueFormats[this.panel.format];\n    if (formatFunc) {\n      return formatFunc(value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n    }\n    return value;\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    // rendering(scope, elem, attrs, ctrl);\n    var data, panel;\n    // elem = elem.find('.progressbar-panel');\n    // var $tooltip = $('<div id=\"tooltip\">');\n\n    ctrl.events.on('render', function() {\n      render(false);\n      setTimeout(function() { render(true); }, 50);\n    });\n\n    function render(incrementRenderCounter) {\n      if (!ctrl.data) { return; }\n      data = ctrl.data;\n      panel = ctrl.panel;\n\n      if (ctrl.panel && ctrl.panel.decimals) {\n        _.map(ctrl.data, (dt, i) => {\n          ctrl.data[i].data = parseFloat(dt.data).toFixed(ctrl.panel.decimals)\n        })\n      }\n    }\n  }\n}\n\nProgressBarCtrl.templateUrl = 'module.html';\n"]}